/* Button style overrides */

.btn-group:not(.btn-group-toggle):has(.btn-outline-secondary) {
  border-radius: 0.5rem !important;
  background-color: transparent !important;
  background-image: linear-gradient(0deg, var(--hb-post-background), var(--hb-post-background)) !important;
  padding: 0.25rem 0;
}

.btn-group:not(.btn-group-toggle) .btn-outline-secondary {
  margin: 0 0.25rem;
  border-radius: 0.5rem !important;
  color: var(--#{$prefix}secondary);
  background-color: transparent;
  border-color: transparent !important;
  --#{$prefix}btn-padding-y: 0.125rem;
  --#{$prefix}btn-focus-shadow-rgb: var(--#{$prefix}secondary-rgb);

  &.disabled, &:disabled {
    color: var(--#{$prefix}black) !important;
    background-color: transparent !important;
  }

  &.active, &:active {
    color: var(--#{$prefix}white) !important;
    background-color: var(--#{$prefix}primary) !important;
    border-color: transparent !important;
  }

  &:is(:focus, :hover):not(.active, :active) {
    color: var(--#{$prefix}white) !important;
    background-color: var(--#{$prefix}secondary) !important;
  }
}

.btn-group:not(.btn-group-toggle) .btn-primary {
  margin: 0 0.25rem;
  border-radius: 0.5rem !important;
  border-color: transparent !important;
  --#{$prefix}btn-padding-y: 0.125rem;
  --#{$prefix}btn-focus-shadow-rgb: var(--#{$prefix}primary-rgb);

  &.disabled, &:disabled {
    color: var(--#{$prefix}black) !important;
    background-color: transparent !important;
  }

  &.active, &:active {
    color: var(--#{$prefix}white) !important;
    background-color: var(--#{$prefix}primary) !important;
    border-color: transparent !important;
  }

  &:is(:focus, :hover):not(.active, :active) {
    color: var(--#{$prefix}white) !important;
    background-color: var(--#{$prefix}primary) !important;
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .btn-group:not(.btn-group-toggle) .btn-outline-secondary  {
      &.active, &:active {
        color: var(--#{$prefix}black) !important;
      }
    
      &:is(:focus, :hover):not(.active, :active) {
        color: var(--#{$prefix}black) !important;
      }
    }

    .btn-group:not(.btn-group-toggle) .btn-primary  {
      &.active, &:active {
        color: var(--#{$prefix}black) !important;
      }
    
      &:is(:focus, :hover):not(.active, :active) {
        color: var(--#{$prefix}black) !important;
      }
    }
  }
}

/* Dropdown */

.ts-control {
  background: transparent !important;
}

.ts-dropdown {
  border-color: var(--#{$prefix}border-color) !important;
  background-color: var(--#{$prefix}body-bg) !important;
  background-image: linear-gradient(0deg, var(--hb-post-background), var(--hb-post-background)), linear-gradient(0deg, var(--hb-post-background), var(--hb-post-background)) !important;
  color: var(--#{$prefix}primary) !important;
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .ts-dropdown {
      background-image: none !important;
    }
  }
}

.ts-dropdown, .ts-control, .ts-control input {
  color: var(--#{$prefix}primary) !important;
}

.ts-dropdown .optgroup-header {
  background: transparent !important;
  color: var(--#{$prefix}body-color) !important;
}

.ts-dropdown .active {
  background-color: var(--#{$prefix}light-bg-subtle) !important;
  color: var(--#{$prefix}primary) !important;
}

.ts-dropdown [data-selectable] .highlight {
  background-color: var(--#{$prefix}highlight-bg) !important;
  color: var(--#{$prefix}highlight-color) !important;
}

/* PieFed */

div.navbar {
  background-color: var(--#{$prefix}body-bg);
  background-image: linear-gradient(0deg, var(--hb-post-background), var(--hb-post-background));
  border-bottom-color: transparent;
}

.card .list-group-item {
  background: none;
  border: none;
}

.warning_badge.nsfw {
  border-color: var(--#{$prefix}danger);
  color: var(--#{$prefix}danger);
}

.breadcrumb {
  --#{$prefix}breadcrumb-bg: transparent;
}

@include media-breakpoint-up(sm) {
  #outer_container {
    margin-top: 1rem;
  }
}

.main_pane {
  border: none;
}

#home_announcement {
  margin-left: 0;
  margin-right: 0;
  margin-bottom: 0.5rem;
  border: none !important;
  background-color: var(--hb-post-background);
  border-radius: 0.5rem;
}

@include media-breakpoint-down(sm) {
  #home_announcement {
    margin-top: 0 !important;
    margin-left: calc(-0.5 * var(--#{$prefix}gutter-x)) !important;
    margin-right: calc(-0.5 * var(--#{$prefix}gutter-x)) !important;
    border-radius: 0;
  }
}

.post_teaser, .post_col, .topics_list {
  margin: 0 !important;
  margin-bottom: 1rem !important;
  border: none !important;
  background-color: var(--hb-post-background);
  border-radius: 0.5rem;
  padding: 1rem;
}

.post_col {
  margin: -8px 0.75rem 1rem !important;
}

.topics_list {
  padding-bottom: 0;
}

@include media-breakpoint-down(sm) {
  .post_list {
    margin-left: calc(-0.5 * var(--#{$prefix}gutter-x)) !important;
    margin-right: calc(-0.5 * var(--#{$prefix}gutter-x)) !important;
    border-radius: 0;
  }

  .post_teaser, .topics_list {
    margin-bottom: 0.5rem !important;
    border-radius: 0;
  }

  .post_col {
    margin-top: 0 !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
    border-radius: 0;
  }

  div:has(> .topics_list) {
    margin-left: calc(-0.5 * var(--#{$prefix}gutter-x)) !important;
    margin-right: calc(-0.5 * var(--#{$prefix}gutter-x)) !important;
  }
}

.post_teaser .thumbnail {
  background-color: transparent !important;
}

.comment > .row {
  margin: 0;

  > :first-child {
    padding-left: 0;
  }
  
  > :last-child {
    padding-right: 0;
  }
}

@include media-breakpoint-down(sm) {
  #more_replies > .row {
    margin-left: 0;
    margin-right: 0;
  }
}

@include media-breakpoint-down(md) {
  :is(#replies, #more_replies) .comment {
    max-width: unset;
  }
}

#replies .comment {
  border: none;
  padding: 1rem;
  padding-bottom: 0;

  .comment {
    margin-bottom: 0 !important;
    background: none;
    padding-right: 0;
  }

  > :has(+ [style*="display: none"]) {
    padding-bottom: 1rem;
  }
}

#replies .comment .replies {
  border-left-color: var(--#{$prefix}gray-300) !important;
  border-top-color: var(--#{$prefix}gray-300) !important;
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    #replies .comment .replies {
      border-left-color: var(--#{$prefix}gray-700) !important;
      border-top-color: var(--#{$prefix}gray-700) !important;
    }
  }
}

#replies .replies .comment {
  margin-right: 0 !important;
}

@include media-breakpoint-down(sm) {
  #replies > div > .comments > .comment {
    margin: 0 0 0.5rem !important;
    border-radius: 0;
  }
}

.comment .show-more {
  background-color: var(--#{$prefix}gray-700);
  color: var(--#{$prefix}white);
}

.comment .continue_thread {
  padding: 1rem;
}

.voting_buttons div {
  border-color: var(--#{$prefix}primary);
}

.voting_buttons_new .upvote_button, .voting_buttons_new .downvote_button {
  color: var(--#{$prefix}primary);
}

#masonry .item .masonry_info .row .col .upvote_button.voted_up, #masonry .item .masonry_info .row .col .downvote_button.voted_up,
.voting_buttons_new .upvote_button.voted_up, .voting_buttons_new .downvote_button.voted_up,
.voting_buttons .upvote_button.voted_up, .voting_buttons .downvote_button.voted_up {
  color: var(--#{$prefix}success);
}

#masonry .item .masonry_info .row .col .upvote_button.voted_down, #masonry .item .masonry_info .row .col .downvote_button.voted_down,
.voting_buttons_new .upvote_button.voted_down, .voting_buttons_new .downvote_button.voted_down,
.voting_buttons .upvote_button.voted_down, .voting_buttons .downvote_button.voted_down {
  color: var(--#{$prefix}danger);
}

@include media-breakpoint-down(md) {
  .post_options_link {
    right: 0px;
  }

  .comment_actions_link {
    right: -15px;
  }
}

#outer_container a:not(.btn):active, footer a:not(.btn):active {
  border-color: var(--#{$prefix}primary);
}

.form-group.required label:after {
  color: var(--#{$prefix}danger);
}

.post_reply_form .form-check {
  bottom: 0.25rem;
}

.form-check .form-check-input {
  top: -2px;
}

.domain_link, .domain_link a {
  color: var(--#{$prefix}gray-500);
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .domain_link, .domain_link a {
      color: var(--#{$prefix}gray-700);
    }
  }
}

.coolfieldset legend, .coolfieldset.expanded legend {
  background: var(--#{$prefix}gray-100) url(/static/images/expanded.gif) no-repeat center left;
}

.coolfieldset.collapsed legend {
  background: var(--#{$prefix}gray-100) url(/static/images/collapsed.gif) no-repeat center left;
}

.coolfieldset, .coolfieldset.expanded {
  border-color: var(--#{$prefix}border-color);
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .coolfieldset legend, .coolfieldset.expanded legend {
      background: var(--#{$prefix}gray-900) url(/static/images/expanded.gif) no-repeat center left;
    }

    .coolfieldset.collapsed legend {
      background: var(--#{$prefix}gray-900) url(/static/images/collapsed.gif) no-repeat center left;
    }
  }
}

.user_preview {
  background-color: var(--#{$prefix}white) !important;
  border-radius: 8px;
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .user_preview {
      background-color: var(--#{$prefix}black) !important;
    }
  }
}
