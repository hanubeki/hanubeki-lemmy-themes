/* Root variables */

:root {
  --hb-post-background: rgba(255, 255, 255, 0.8);
}

@if $enable-dark-mode {
  @include color-mode(dark, true) {
    @each $color, $value in $theme-colors {
      @if $color == "light" {
      } @else if $color == "dark" {
      } @else {
        --#{$prefix}#{$color}: #{tint-color($value, 40%)};
      }
    }
    @each $color, $value in $theme-colors {
      @if $color == "light" {
      } @else if $color == "dark" {
      } @else {
        --#{$prefix}#{$color}-rgb: #{to-rgb(tint-color($value, 40%))};
      }
    }

    --hb-post-background: rgba(var(--#{$prefix}light-rgb), 0.15);
  }
}

/* Button style overrides */

.btn-group-toggle:has(.btn-outline-secondary) {
  border-radius: 0.5rem !important;
  background-color: var(--#{$prefix}secondary);
  background-image: none;
  padding: 0.25rem 0;
}

.btn-group-toggle .btn-outline-secondary {
  margin: 0 0.25rem;
  border-radius: 0.5rem !important;
  color: var(--#{$prefix}white);
  background-color: transparent;
  border-color: transparent !important;
  --#{$prefix}btn-padding-y: 0.125rem;
  --#{$prefix}btn-focus-shadow-rgb: var(--#{$prefix}white-rgb);

  &.disabled, &:disabled {
    color: var(--#{$prefix}black) !important;
    background-color: transparent !important;
  }

  &.active, &:active {
    color: var(--#{$prefix}primary) !important;
    background-color: var(--#{$prefix}white) !important;
    background-image: linear-gradient(0deg, var(--hb-post-background), var(--hb-post-background)) !important;
  }

  &:is(:focus, :hover):not(.active, :active) {
    color: var(--#{$prefix}secondary) !important;
    background-color: var(--#{$prefix}white) !important;
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .btn-group-toggle:has(.btn-outline-secondary) {
      background-color: transparent;
      background-image: linear-gradient(0deg, var(--hb-post-background), var(--hb-post-background));
    }

    .btn-group-toggle .btn-outline-secondary {
      --#{$prefix}btn-focus-shadow-rgb: var(--#{$prefix}secondary-rgb);

      &.disabled, &:disabled {
        color: var(--#{$prefix}gray) !important;
      }

      &.active, &:active {
        background-color: var(--#{$prefix}black) !important;
        background-image: none !important;
        border-color: transparent !important;
      }

      &:is(:focus, :hover):not(.active, :active) {
        color: var(--#{$prefix}black) !important;
        background-color: var(--#{$prefix}secondary) !important;
      }
    }
  }
}

/* General Bootstrap dark values */

@if $enable-dark-mode {
  @include color-mode(dark) {
    @each $color, $value in $theme-colors {
      @if $color == "light" {
      } @else if $color == "dark" {
      } @else {
        .text-bg-#{$color} {
          color: #{color-contrast(tint-color($value, 40%))} !important;
        }
      }
    }

    @each $color, $value in $theme-colors {
      @if $color == "light" {
      } @else if $color == "dark" {
      } @else {
        .btn-#{$color} {
          @include button-variant(tint-color($value, 40%), tint-color($value, 40%));
        }
      }
    }
  
    @each $color, $value in $theme-colors {
      @if $color == "light" {
      } @else if $color == "dark" {
      } @else {
        .btn-outline-#{$color} {
          @include button-variant(tint-color($value, 40%), tint-color($value, 40%));
        }
      }
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .form-check-input {
      &:checked {
        background-color: $form-check-input-checked-bg-color-dark;
        border-color: $form-check-input-checked-border-color-dark;
    
        &[type="checkbox"] {
          @if $enable-gradients {
            --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-checked-bg-image-dark)}, var(--#{$prefix}gradient);
          } @else {
            --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-checked-bg-image-dark)};
          }
        }
    
        &[type="radio"] {
          @if $enable-gradients {
            --#{$prefix}form-check-bg-image: #{escape-svg($form-check-radio-checked-bg-image-dark)}, var(--#{$prefix}gradient);
          } @else {
            --#{$prefix}form-check-bg-image: #{escape-svg($form-check-radio-checked-bg-image-dark)};
          }
        }
      }
    
      &[type="checkbox"]:indeterminate {
        background-color: $form-check-input-indeterminate-bg-color-dark;
        border-color: $form-check-input-indeterminate-border-color-dark;
    
        @if $enable-gradients {
          --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-indeterminate-bg-image-dark)}, var(--#{$prefix}gradient);
        } @else {
          --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-indeterminate-bg-image-dark)};
        }
      }
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .nav-tabs {
      --#{$prefix}nav-tabs-border-color: var(--#{$prefix}gray-700);
      --#{$prefix}nav-tabs-link-hover-border-color: var(--#{$prefix}gray-900) var(--#{$prefix}gray-900) var(--#{$prefix}gray-700);
      --#{$prefix}nav-tabs-link-active-color: var(--#{$prefix}gray-300);
      --#{$prefix}nav-tabs-link-active-bg: var(--#{$prefix}gray-900);
      --#{$prefix}nav-tabs-link-active-border-color: var(--#{$prefix}gray-700) var(--#{$prefix}gray-700) var(--#{$prefix}gray-900);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .dropdown-menu {
      --#{$prefix}dropdown-link-color: var(--#{$prefix}gray-300);
      --#{$prefix}dropdown-link-hover-color: var(--#{$prefix}gray-400);
      --#{$prefix}dropdown-link-active-color: var(--#{$prefix}black);
      --#{$prefix}dropdown-link-active-bg: #{tint-color($primary, 40%)};
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .pagination {
      --#{$prefix}pagination-hover-bg: var(--#{$prefix}gray-900);
      --#{$prefix}pagination-hover-border-color: var(--#{$prefix}gray-500);
      --#{$prefix}pagination-focus-bg: var(--#{$prefix}gray-700);
      --#{$prefix}pagination-disabled-bg: var(--#{$prefix}gray-700);
      --#{$prefix}pagination-disabled-border-color: var(--#{$prefix}gray-300);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .tooltip {
        --#{$prefix}tooltip-bg: var(--#{$prefix}gray-300);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .popover {
      --#{$prefix}popover-header-bg: var(--#{$prefix}gray-900);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .breadcrumb {
      --#{$prefix}breadcrumb-bg: var(--#{$prefix}gray-900);
      --#{$prefix}breadcrumb-divider-color: var(--#{$prefix}gray-500); 
      --#{$prefix}breadcrumb-item-active-color: var(--#{$prefix}white);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .link-dark {
      color: var(--#{$prefix}gray-100) !important;
      text-decoration-color: var(--#{$prefix}gray-100) !important;

      &:focus, &:hover {
        color: var(--#{$prefix}gray-100) !important;
        text-decoration-color: var(--#{$prefix}gray-100) !important;
      }
    }
  }
}

/* Lemmy additions */

div:has(> nav.navbar) {
  background-color: var(--#{$prefix}body-bg);
  background-image: linear-gradient(0deg, var(--hb-post-background), var(--hb-post-background));
}

.card {
  background-color: var(--hb-post-background);
  border-radius: 0.5rem;
}

.form-control, .form-select {
  background-color: var(--hb-post-background) !important;
  color: var(--#{$prefix}primary) !important;
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .form-control, .form-select {
      background-color: var(--#{$prefix}body-bg) !important;
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .thumbnail {
      background-color: var(--#{$prefix}gray-700) !important;
    }
  }
}

.post-listing {
  margin: 0 !important;
  margin-bottom: 1rem !important;
  background-color: var(--hb-post-background);
  border-radius: 0.5rem;
  padding: 1rem;
}

.comment {
  margin: 0 !important;
  margin-bottom: 1rem !important;
  background-color: var(--hb-post-background);
  border-radius: 0.5rem;
  padding: 0.5rem;
  padding-right: 1rem;
}

@include media-breakpoint-down(sm) {
  .post-listing, .comment {
    margin: 0 -0.75rem 0.5rem !important;
    border-radius: 0;
  }
}

.comment > .comments > .comment {
  margin: 0 !important;
  background: none;
  padding: 0;
}

.post-listing > .card {
  background: none;
}

.post-listing + hr, .comments + hr {
  display: none;
}

@include media-breakpoint-down(sm) {
  .post-title .h5 {
    font-size: 1.15rem;
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .post-title a:visited:not(:hover) {
      color: var(--#{$prefix}gray-500) !important;
    }

    .post-title a:visited:hover {
      color: var(--#{$prefix}gray-300) !important;
    }
  }
}

.comments, div > .comments > .comment > .details {
  border: none !important;
}

.details {
  padding: 0.5rem 0 !important;
}

div > .comments > .comment:has(> .details > div > div:only-child) {
  padding-bottom: 0.5rem;
}

.details:has(> div > div:only-child) {
  margin: 0;
}

.comment > article.mark {
	background-color: var(--#{$prefix}gray-100) !important;
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .comment > article.mark {
      background-color: var(--#{$prefix}gray-800) !important;
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .markdown-textarea > div > div > div.bg-light {
      background-color: var(--#{$prefix}gray-900) !important;
    }
  }
}
