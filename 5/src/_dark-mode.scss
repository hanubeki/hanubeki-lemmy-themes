/* General Bootstrap dark values */

@if $enable-dark-mode {
  @include color-mode(dark, true) {
    @each $color, $value in $theme-colors {
      @if $color == "light" {
      } @else if $color == "dark" {
      } @else {
        --#{$prefix}#{$color}: #{tint-color($value, 40%)};
      }
    }
    @each $color, $value in $theme-colors {
      @if $color == "light" {
      } @else if $color == "dark" {
      } @else {
        --#{$prefix}#{$color}-rgb: #{to-rgb(tint-color($value, 40%))};
      }
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .blockquote-footer {
      color: var(--#{prefix}gray-700);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    @each $color, $value in $theme-colors {
      .text-bg-#{$color} {
        @if $color == "light" {
          color: #{color-contrast($value)} !important;
        } @else if $color == "dark" {
          color: #{color-contrast($value)} !important;
        } @else {
          color: #{color-contrast(tint-color($value, 40%))} !important;
        }
      }
    }

    @each $color, $value in $theme-colors {
      .badge.bg-#{$color} {
        @if $color == "light" {
          color: #{color-contrast($value)} !important;
        } @else if $color == "dark" {
          color: #{color-contrast($value)} !important;
        } @else {
          color: #{color-contrast(tint-color($value, 40%))} !important;
        }
      }
    }

    .btn {
      --#{$prefix}btn-box-shadow: #{$btn-box-shadow-dark};
    }

    @each $color, $value in $theme-colors {
      @if $color == "light" {
      } @else if $color == "dark" {
      } @else {
        .btn-#{$color} {
          @include button-variant(tint-color($value, 40%), tint-color($value, 40%));
        }
      }
    }
  
    @each $color, $value in $theme-colors {
      @if $color == "light" {
      } @else if $color == "dark" {
      } @else {
        .btn-outline-#{$color} {
          @include button-outline-variant(tint-color($value, 40%), tint-color($value, 40%));
        }
      }
    }

    .btn-link {
      --#{$prefix}btn-focus-shadow-rgb: #{$btn-link-focus-shadow-rgb-dark};
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    @each $color, $value in $table-variants-dark {
      @include table-variant-dark($color, $value);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .form-select:-moz-focusring {
      text-shadow: 0 0 0 #{tint-color($primary, 40%)};
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .form-check-input {
      &:checked {
        background-color: $form-check-input-checked-bg-color-dark;
        border-color: $form-check-input-checked-border-color-dark;
    
        &[type="checkbox"] {
          @if $enable-gradients {
            --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-checked-bg-image-dark)}, var(--#{$prefix}gradient);
          } @else {
            --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-checked-bg-image-dark)};
          }
        }
    
        &[type="radio"] {
          @if $enable-gradients {
            --#{$prefix}form-check-bg-image: #{escape-svg($form-check-radio-checked-bg-image-dark)}, var(--#{$prefix}gradient);
          } @else {
            --#{$prefix}form-check-bg-image: #{escape-svg($form-check-radio-checked-bg-image-dark)};
          }
        }
      }
    
      &[type="checkbox"]:indeterminate {
        background-color: $form-check-input-indeterminate-bg-color-dark;
        border-color: $form-check-input-indeterminate-border-color-dark;
    
        @if $enable-gradients {
          --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-indeterminate-bg-image-dark)}, var(--#{$prefix}gradient);
        } @else {
          --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-indeterminate-bg-image-dark)};
        }
      }

      &:focus {
        @if $enable-shadows {
          @include box-shadow($input-box-shadow, $input-focus-box-shadow-dark);
        } @else {
          // Avoid using mixin so we can pass custom focus shadow properly
          box-shadow: $input-focus-box-shadow-dark;
        }
      }
    }

    .form-switch .form-check-input:checked {
      @if $enable-gradients {
        --#{$prefix}form-switch-bg: #{escape-svg($form-switch-checked-bg-image-dark)}, var(--#{$prefix}gradient);
      } @else {
        --#{$prefix}form-switch-bg: #{escape-svg($form-switch-checked-bg-image-dark)};
      }
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .form-range:focus::-webkit-slider-thumb {
      box-shadow: $form-range-thumb-focus-box-shadow-dark;
    }
    .form-range:focus::-moz-range-thumb {
      box-shadow: $form-range-thumb-focus-box-shadow-dark;
    }
    .form-range::-webkit-slider-thumb {
      background-color: #{tint-color($primary, 40%)};
    }
    .form-range::-moz-range-thumb {
      background-color: #{tint-color($primary, 40%)};
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .form-floating > :disabled ~ label,
    .form-floating > .form-control:disabled ~ label {
      color: var(--#{prefix}gray-500);

      &::after {
        background-color: var(--#{prefix}gray-700);
      }
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    @each $state, $data in $form-validation-states-dark {
      @include form-validation-state($state, $data...);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .input-group-text {
      background-color: var(--hb-post-background);
      color: var(--#{prefix}white);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .nav-link:focus-visible {
      box-shadow: $nav-link-focus-box-shadow-dark;
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .nav-tabs {
      --#{$prefix}nav-tabs-border-color: var(--#{$prefix}gray-700);
      --#{$prefix}nav-tabs-link-hover-border-color: var(--#{$prefix}gray-900) var(--#{$prefix}gray-900) var(--#{$prefix}gray-700);
      --#{$prefix}nav-tabs-link-active-color: var(--#{$prefix}gray-300);
      --#{$prefix}nav-tabs-link-active-bg: var(--#{$prefix}gray-900);
      --#{$prefix}nav-tabs-link-active-border-color: var(--#{$prefix}gray-700) var(--#{$prefix}gray-700) var(--#{$prefix}gray-900);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .nav-pills {
      --#{$prefix}nav-pills-link-active-color: #{color-contrast(tint-color($primary, 40%))};
      --#{$prefix}nav-pills-link-active-bg: #{tint-color($primary, 40%)};
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .dropdown-menu {
      --#{$prefix}dropdown-link-color: var(--#{$prefix}gray-300);
      --#{$prefix}dropdown-link-hover-color: var(--#{$prefix}gray-400);
      --#{$prefix}dropdown-link-active-color: var(--#{$prefix}black);
      --#{$prefix}dropdown-link-active-bg: #{tint-color($primary, 40%)};
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .accordion {
      --#{$prefix}accordion-btn-focus-box-shadow: #{$accordion-button-focus-box-shadow-dark};
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .pagination {
      --#{$prefix}pagination-hover-bg: var(--#{$prefix}gray-900);
      --#{$prefix}pagination-hover-border-color: var(--#{$prefix}gray-500);
      --#{$prefix}pagination-focus-bg: var(--#{$prefix}gray-700);
      --#{$prefix}pagination-focus-box-shadow: #{$pagination-focus-box-shadow-dark};
      --#{$prefix}pagination-active-color: #{color-contrast(tint-color($primary, 40%))};
      --#{$prefix}pagination-active-bg: #{tint-color($primary, 40%)};
      --#{$prefix}pagination-active-border-color: #{tint-color($primary, 40%)};
      --#{$prefix}pagination-disabled-bg: var(--#{$prefix}gray-700);
      --#{$prefix}pagination-disabled-border-color: var(--#{$prefix}gray-300);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .progress,
    .progress-stacked {
      --#{$prefix}progress-bar-color: #{color-contrast(tint-color($primary, 40%))};
      --#{$prefix}progress-bar-bg: #{tint-color($primary, 40%)};
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .list-group {
      --#{$prefix}list-group-active-color: #{color-contrast(tint-color($primary, 40%))};
      --#{$prefix}list-group-active-bg: #{tint-color($primary, 40%)};
      --#{$prefix}list-group-active-border-color: #{tint-color($primary, 40%)};
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .tooltip {
        --#{$prefix}tooltip-bg: var(--#{$prefix}gray-300);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .popover {
      --#{$prefix}popover-header-bg: var(--#{$prefix}gray-900);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .breadcrumb {
      --#{$prefix}breadcrumb-bg: var(--#{$prefix}gray-900);
      --#{$prefix}breadcrumb-divider-color: var(--#{$prefix}gray-500); 
      --#{$prefix}breadcrumb-item-active-color: var(--#{$prefix}white);
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .btn-close {
      --#{$prefix}btn-close-color: #{$white};
      --#{$prefix}btn-close-focus-shadow: #{$btn-close-focus-shadow-dark};
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    @each $color, $value in $theme-colors {
      @if $color == "light" {
      } @else if $color == "dark" {
      } @else {
        @if $link-shade-percentage != 0 {
          .link-#{$color}:hover,
          .link-#{$color}:focus {
            $hover-color: if(color-contrast(tint-color($value, 40%)) == $color-contrast-light, shade-color(tint-color($value, 40%), $link-shade-percentage), tint-color(tint-color($value, 40%), $link-shade-percentage));
            color: RGBA(#{to-rgb($hover-color)}, var(--#{$prefix}link-opacity, 1)) if($enable-important-utilities, !important, null);
            text-decoration-color: RGBA(to-rgb($hover-color), var(--#{$prefix}link-underline-opacity, 1)) if($enable-important-utilities, !important, null);
          }
        }
      }
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .link-dark {
      color: var(--#{$prefix}gray-100) !important;
      text-decoration-color: var(--#{$prefix}gray-100) !important;

      &:focus, &:hover {
        color: var(--#{$prefix}gray-100) !important;
        text-decoration-color: var(--#{$prefix}gray-100) !important;
      }
    }
  }
}
